// scripts/testEmailConfig.js
require('dotenv').config();
const { verifyEmailConfig, transporter } = require('../src/config/email');

/**
 * Ki·ªÉm tra c·∫•u h√¨nh email v√† g·ª≠i email test
 */
async function testEmailConfiguration() {
  console.log('üîç Ki·ªÉm tra c·∫•u h√¨nh email...');
  
  // Ki·ªÉm tra c√°c bi·∫øn m√¥i tr∆∞·ªùng b·∫Øt bu·ªôc
  if (!process.env.EMAIL_USER || !process.env.EMAIL_PASS) {
    console.error('‚ùå L·ªói: Thi·∫øu bi·∫øn m√¥i tr∆∞·ªùng EMAIL_USER ho·∫∑c EMAIL_PASS!');
    console.log('Vui l√≤ng c·∫≠p nh·∫≠t file .env v·ªõi c√°c th√¥ng tin sau:');
    console.log('EMAIL_USER=your-email@gmail.com');
    console.log('EMAIL_PASS=your-password-or-app-password');
    return false;
  }
  
  // Ki·ªÉm tra k·∫øt n·ªëi v·ªõi server email
  try {
    const isConfigValid = await verifyEmailConfig();
    
    if (!isConfigValid) {
      console.error('‚ùå Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß email.');
      console.error('Vui l√≤ng ki·ªÉm tra l·∫°i th√¥ng tin ƒëƒÉng nh·∫≠p email v√† c√†i ƒë·∫∑t SMTP.');
      
      if (process.env.SMTP_HOST) {
        console.log('\nC·∫•u h√¨nh SMTP hi·ªán t·∫°i:');
        console.log(`- Host: ${process.env.SMTP_HOST}`);
        console.log(`- Port: ${process.env.SMTP_PORT}`);
        console.log(`- Secure: ${process.env.SMTP_SECURE === 'true' ? 'C√≥' : 'Kh√¥ng'}`);
      } else {
        console.log('\nƒêang s·ª≠ d·ª•ng Gmail. N·∫øu b·∫°n s·ª≠ d·ª•ng Gmail, h√£y ƒë·∫£m b·∫£o:');
        console.log('1. ƒê√£ k√≠ch ho·∫°t "Less secure app access" ho·∫∑c');
        console.log('2. ƒêang s·ª≠ d·ª•ng "App password" n·∫øu b·∫°n ƒë√£ b·∫≠t x√°c th·ª±c 2 y·∫øu t·ªë');
      }
      
      return false;
    }
    
    console.log('‚úÖ K·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß email th√†nh c√¥ng!');
    
    // Hi·ªÉn th·ªã th√¥ng tin c·∫•u h√¨nh
    console.log('\nüìß Th√¥ng tin c·∫•u h√¨nh email:');
    console.log(`- Email ng∆∞·ªùi g·ª≠i: ${process.env.EMAIL_USER}`);
    
    if (process.env.SMTP_HOST) {
      console.log('- Lo·∫°i m√°y ch·ªß: SMTP t√πy ch·ªânh');
      console.log(`- SMTP Host: ${process.env.SMTP_HOST}`);
      console.log(`- SMTP Port: ${process.env.SMTP_PORT}`);
    } else {
      console.log('- Lo·∫°i m√°y ch·ªß: Gmail');
    }
    
    return true;
  } catch (error) {
    console.error('‚ùå L·ªói khi ki·ªÉm tra c·∫•u h√¨nh email:', error.message);
    return false;
  }
}

/**
 * G·ª≠i email test
 */
async function sendTestEmail(toEmail) {
  if (!toEmail) {
    console.error('‚ùå Vui l√≤ng cung c·∫•p ƒë·ªãa ch·ªâ email ƒë·ªÉ g·ª≠i test.');
    return false;
  }
  
  console.log(`üì§ ƒêang g·ª≠i email test ƒë·∫øn ${toEmail}...`);
  
  try {
    const info = await transporter.sendMail({
      from: process.env.EMAIL_USER,
      to: toEmail,
      subject: 'Test Email t·ª´ Movie Streaming',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; border: 1px solid #e0e0e0; border-radius: 5px;">
          <h2 style="color: #e50914;">Test Email t·ª´ Movie Streaming</h2>
          <p>ƒê√¢y l√† email test t·ª´ h·ªá th·ªëng Movie Streaming.</p>
          <p>N·∫øu b·∫°n nh·∫≠n ƒë∆∞·ª£c email n√†y, c·∫•u h√¨nh email c·ªßa h·ªá th·ªëng ƒë√£ ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng.</p>
          <p>Email ƒë∆∞·ª£c g·ª≠i l√∫c: ${new Date().toLocaleString()}</p>
          <p>Tr√¢n tr·ªçng,<br>ƒê·ªôi ng≈© h·ªó tr·ª£ Movie Streaming</p>
        </div>
      `
    });
    
    console.log('‚úÖ Email test ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng!');
    console.log(`üì® Message ID: ${info.messageId}`);
    return true;
  } catch (error) {
    console.error('‚ùå L·ªói khi g·ª≠i email test:', error.message);
    return false;
  }
}

// Ch·∫°y script n·∫øu ƒë∆∞·ª£c g·ªçi tr·ª±c ti·∫øp
if (require.main === module) {
  const args = process.argv.slice(2);
  const testEmail = args[0];
  
  testEmailConfiguration()
    .then(configValid => {
      if (configValid && testEmail) {
        return sendTestEmail(testEmail);
      } else if (configValid) {
        console.log('\nüîç C·∫•u h√¨nh email h·ª£p l·ªá! ƒê·ªÉ g·ª≠i email test, ch·∫°y:');
        console.log('node scripts/testEmailConfig.js your-email@example.com');
      }
    })
    .catch(err => console.error('‚ùå L·ªói:', err))
    .finally(() => process.exit());
}

module.exports = {
  testEmailConfiguration,
  sendTestEmail
};
